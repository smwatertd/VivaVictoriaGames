"""init

Revision ID: 9406e1ee1d1f
Revises:
Create Date: 2024-01-01 20:23:25.768167

"""
from typing import Sequence, Union

from alembic import op

import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9406e1ee1d1f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'games',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'state',
            sa.Enum(
                'PLAYERS_WAITING',
                'IN_PROCESS',
                'PREPARATORY_STAGE',
                'CAPTURING_STAGE',
                'MARKS_WAITING',
                'BATTLING_STAGE',
                'DUELING',
                'ANSWERS_WAITING',
                'ENDED',
                name='gamestate',
            ),
            nullable=False,
        ),
        sa.Column('creator_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'battles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('round_number', sa.Integer(), server_default='0', nullable=True),
        sa.Column('game_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['game_id'],
            ['games.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'captures',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('round_number', sa.Integer(), server_default='0', nullable=True),
        sa.Column('correct_answer_id', sa.Integer(), nullable=True),
        sa.Column('game_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['game_id'],
            ['games.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'fields',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('value', sa.Integer(), server_default='0', nullable=True),
        sa.Column('game_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['game_id'],
            ['games.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'preparations',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('round_number', sa.Integer(), server_default='0', nullable=True),
        sa.Column('game_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['game_id'],
            ['games.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'marked_fields',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('field_id', sa.Integer(), nullable=True),
        sa.Column('capture_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['capture_id'],
            ['captures.id'],
        ),
        sa.ForeignKeyConstraint(
            ['field_id'],
            ['fields.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'players',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('connected_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('answer_id', sa.Integer(), nullable=True),
        sa.Column('answered_at', sa.DateTime(), nullable=True),
        sa.Column('game_id', sa.Integer(), nullable=True),
        sa.Column('game_order_id', sa.Integer(), nullable=True),
        sa.Column('marked_field_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['game_id'],
            ['games.id'],
        ),
        sa.ForeignKeyConstraint(
            ['game_order_id'],
            ['games.id'],
        ),
        sa.ForeignKeyConstraint(
            ['marked_field_id'],
            ['marked_fields.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'captured_fields',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('is_base', sa.Boolean(), nullable=True),
        sa.Column('field_id', sa.Integer(), nullable=True),
        sa.Column('owner_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['field_id'],
            ['fields.id'],
        ),
        sa.ForeignKeyConstraint(
            ['owner_id'],
            ['players.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'duels',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('round_number', sa.Integer(), server_default='0', nullable=True),
        sa.Column('category_id', sa.Integer(), nullable=True),
        sa.Column('correct_answer_id', sa.Integer(), nullable=True),
        sa.Column('battle_id', sa.Integer(), nullable=True),
        sa.Column('attacker_id', sa.Integer(), nullable=True),
        sa.Column('defender_id', sa.Integer(), nullable=True),
        sa.Column('field_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['attacker_id'],
            ['players.id'],
        ),
        sa.ForeignKeyConstraint(
            ['battle_id'],
            ['battles.id'],
        ),
        sa.ForeignKeyConstraint(
            ['defender_id'],
            ['players.id'],
        ),
        sa.ForeignKeyConstraint(
            ['field_id'],
            ['captured_fields.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('duels')
    op.drop_table('captured_fields')
    op.drop_table('players')
    op.drop_table('marked_fields')
    op.drop_table('preparations')
    op.drop_table('fields')
    op.drop_table('captures')
    op.drop_table('battles')
    op.drop_table('games')
    # ### end Alembic commands ###
